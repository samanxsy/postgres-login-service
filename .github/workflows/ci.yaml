name: CI
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/README.md'
  pull_request:
    paths-ignore:
      - '**/README.md'
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SESSION_KEY: ${{ secrets.SESSION_KEY }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_DB: db
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build and run containers
        run: docker-compose up -d --build

      - name: Run unit tests with pytest
        run: |
          sleep 10  # Waiting for the system to be ready
          container_id=$(docker ps --filter "name=postgres-login-service_backend_1" --format "{{.ID}}")
          docker exec $container_id pytest

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 --filename=*.py backend/

      - name: Metadata for frintend image
        id: frontend-meta
        uses: docker/metadata-action@v4
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        with:
          images: |
            Dockerfile-frontend
          tags: |
            $DOCKERHUB_USERNAME/postgres-login-system/frontend:latest
            $DOCKERHUB_USERNAME/postgres-login-system/frontend:{{date 'YYYYMMDD'}}-{{sha}}

      - name: Metadata for backend image
        id: backend-meta
        uses: docker/metadata-action@v4
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        with:
          images: |
            Dockerfile-backend
          tags: |
            $DOCKERHUB_USERNAME/postgres-login-system/backend:latest
            $DOCKERHUB_USERNAME/postgres-login-system/backend:{{date 'YYYYMMDD'}}-{{sha}}

      - name: Metadata for database image
        id: postgres-meta
        uses: docker/metadata-action@v4
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        with:
          images: |
            Dockerfile-postgres
          tags: |
            $DOCKERHUB_USERNAME/postgres-login-system/db:latest
            $DOCKERHUB_USERNAME/postgres-login-system/db:{{date 'YYYYMMDD'}}-{{sha}}

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push the frontend image
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile-frontend
          context: .
          push: true
          tags: ${{ steps.frontend-meta.outputs.tags }}

      - name: Build & Push the backend image
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile-backend
          context: .
          push: true
          tags: ${{ steps.backend-meta.outputs.tags }}

      - name: Build & Push the database image
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile-postgres
          context: .
          push: true
          tags: ${{ steps.postgres-meta.outputs.tags }}
